plugins:
  - serverless-offline

service: mt-backend
app: mountain-traveler
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
      Resource: 'arn:aws:dynamodb:eu-west-1:*:*'

functions:
  #PROFILE
  profileGet:
    handler: profile/get.main
    events:
      - http:
          path: profile
          method: get
  profileUpdate:
    handler: profile/update.main
    events:
      - http:
          path: profile
          method: patch
  #USER
  userGetById:
    handler: user/get.main
    events:
      - http:
          path: user/{id}
          method: get
  usersGetByIds:
    handler: users/get.main
    events:
      - http:
          path: users/{ids}
          method: get
  usersGetMostActiveByIds:
    handler: users/get.mostActive
    events:
      - http:
          path: users/most-active/{ids}
          method: get
  #STORIES
  storiesGetLatest:
    handler: stories/get.latest
    events:
      - http:
          path: stories
          method: get
  storiesGetByUserId:
    handler: stories/get.main
    events:
      - http:
          path: stories/user/{userId}
          method: get
  storyRemoveById:
    handler: stories/delete.main
    events:
      - http:
          path: stories/{id}
          method: delete
  storyAddLike:
    handler: stories/like.add
    events:
      - http:
          path: stories/{id}
          method: patch
  storyRemoveLike:
    handler: stories/like.delete
    events:
      - http:
          path: stories/{id}
          method: patch
#          authorizer: userPools / ?
#  authorizerFunc:
#    handler: handler.authorizerFunc

resources:
  - ${file(resources/tables.yml)}

